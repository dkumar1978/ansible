---
- name: Check ABAP DB Servers Status
  hosts: all
  gather_facts: false
  become: yes

  tasks:

  - fail:
      msg: "You must specify related group in the limit parameter"
    when: ansible_limit is not defined
    run_once: true

  - name: Get SID from /etc/passwd
    shell: /usr/sap/hostctrl/exe/saphostctrl -function ListInstances | tr -d ' ' | awk -F':' '{split($2,a,"-"); print a[1]}' | awk '{gsub(/\<(SAP|DAA)\>/,"");print}' | awk NF
    become_user: root
    register: result

  - set_fact:
      SID: "{{ result.stdout[:3] }}"

# This task should be uncommented for debugging purposes only
  # - name: show SID number(s)
  #   debug:
  #     msg: "{{ SID }}"

  - name: collect instance number(s)
    shell:
       cmd: /usr/sap/hostctrl/exe/lssap | awk -v sid={{ SID |upper }} -F'|' '{gsub(" ","");if ($3 ~/^HDB/) print $2}'
    register: instance_nr
    become: yes
    ignore_errors: true

  - fail:
      msg: No HDB instance found.
    when: instance_nr.stdout == ""    
  # - debug: var=instance_nr

# This task should be uncommented for debugging purposes only
  # - name: show instance number(s)
  #   debug:
  #       msg: "{{ instance_nr.stdout_lines }}"

  - name: initialise empty array
    set_fact:
       instance_nr_lines: []

  - name: create fact that will use instance_nr_lines array
    set_fact:
       instance_nr_lines: "{{ instance_nr_lines }} + [ '{{ item }}' ]"
    loop: "{{ instance_nr.stdout_lines }}"

# This task should be uncommented for debugging purposes only
  # - name: list first instance_nr
  #   debug:
  #       msg: "{{ instance_nr_lines[0] }}"

# This task should be uncommented for debugging purposes only
  # - name: show instance numbers, line-by-line
  #   debug:
  #       msg: "This is an instance number: {{ item }}"
  #   loop: "{{ instance_nr_lines }}"

  - name: Setting sapcontrol default path 
    set_fact:
      sap_ctrl_path: /usr/sap/hostctrl/exe/sapcontrol

# This task should be uncommented for debugging purposes only
  # - debug: 
  #     msg: "{{ sap_ctrl_path }}" 

       
       
  - fail:
      msg: "sapcontrol cannot be found using cmd -> 'source /home/{{ SID|lower }}adm/.cshrc;/usr/bin/which sapcontrol'"
    when: sap_ctrl_path == ""

  - name: Status of DB
    # shell:  /bin/csh -c "{{ sap_ctrl_path }} -prot NI_HTTP -nr {{ instance_nr_lines[0] }} -function GetProcessList"
    command:  "{{ sap_ctrl_path }} -prot NI_HTTP -nr {{ instance_nr_lines[0] }} -function GetSystemInstanceList"
    args:
      warn: no
    become: yes
    become_user: "{{ SID|lower }}adm"
    register: DB_status

# This task should be uncommented for debugging purposes only
  # - debug: var=DB_status.stdout_lines

  - name: Status of DBS when it is running
    debug:
       msg: "DB IS UP and RUNNING for {{ inventory_hostname }}"
    when: "'GREEN' in DB_status.stdout"
    
  - name: Status of DBS when it is Stopped
    debug:
       msg: "DB is DOWN for {{ inventory_hostname }}"
    when: "'GRAY' in DB_status.stdout or 'YELLOW' in DB_status.stdout"